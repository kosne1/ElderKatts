// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PoolWarsV0.Data;

#nullable disable

namespace PoolWarsV0.Data.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PoolWarsV0.Data.Models.CardMetadataDao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CardMintId")
                        .HasColumnType("integer");

                    b.Property<int>("Strength")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CardMintId")
                        .IsUnique();

                    b.ToTable("CardMetadata");
                });

            modelBuilder.Entity("PoolWarsV0.Data.Models.SolanaAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Address")
                        .IsUnique();

                    b.ToTable("Addresses");

                    b.HasDiscriminator<string>("Discriminator").HasValue("SolanaAddress");
                });

            modelBuilder.Entity("PoolWarsV0.Data.Models.AllowedCreatorAddress", b =>
                {
                    b.HasBaseType("PoolWarsV0.Data.Models.SolanaAddress");

                    b.HasDiscriminator().HasValue("AllowedCreatorAddress");
                });

            modelBuilder.Entity("PoolWarsV0.Data.Models.CardMintAddress", b =>
                {
                    b.HasBaseType("PoolWarsV0.Data.Models.SolanaAddress");

                    b.HasDiscriminator().HasValue("CardMintAddress");
                });

            modelBuilder.Entity("PoolWarsV0.Data.Models.CardMetadataDao", b =>
                {
                    b.HasOne("PoolWarsV0.Data.Models.CardMintAddress", "CardMint")
                        .WithMany()
                        .HasForeignKey("CardMintId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CardMint");
                });
#pragma warning restore 612, 618
        }
    }
}
